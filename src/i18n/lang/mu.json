{
    "header": {
      "title": "sa se ene tit"
  
      },
      "home": {
        "title": "web learning terminal",
        "welcome": "Bienveni",
        "play": "zwe",
        "login": "log in",
        "play-guest": "zwe comme inviter",
        "not-connected": "to pas connecte, to envi?",
        "signup": "cre ene account ?"
      },
      "login": {
        "password": "Password",
        "email": "Email",
        "signin": "Sign In",
        "signup": "cre ene account",
        "incorrect-credentials": "Email ou password pas bon"
      },
      "side-bar": {
        "home": "home",
        "profile": "profil",
        "login": "log in",
        "logout": "log out",
        "achievements": "exploits",
        "language": "labgaz"
      },
      "constant-level": {
        "title":"Constants",
        "next-button":"suivan",
        "pixel-puff-dialogues":{
          "introduction":"Nou lemond ress sanzer, me bizin balance. Ena zafer pas kav sanzer couma gravite",
          "definitions":{
            "first":"Dan programmation, constant se ene valer ki pas kav sanze ene fois ki li finn cre.",
            "second":"Bann Constants itil pou ban valer ki bisin ress consisten, pou ki code la ress fiab"
          },
          "explanations":{
            "first":"Ene fois met ene valer, pas kav modifie",
            "second":"Here is how we define a constant",
            "third":"It should have a name and a value assigned to it",
            "fourth":"Oh no what is happening!",
            "fifth":"Here, let us make the gravity constant, it can't be changed"
          },
          "challenge":{
            "title":"Esseye fer enn constant avec ban valer enba",
            "sucess":"Bon",
            "failure":"Refere"
          }
        }
      },
      "variable-level":{
        "title":"Variab",
        "next-button":"next",
        "pixel-puff-dialogues":{
          
          "introduction":"Variab se enn boite ar ene nom lor la. To kav met differen zafer dans boite la, ek kan to bisin kitsoz depi ene boite to zis gete nom la.",
          "definitions":{
            "first":"Variab impe coumsa constant. Selma zot valer kav sanze"
          },
          "explanations":{
            "first":"Nomme: Boite la bisin ene bon nom",
            "second":"Pas kav servi nimporte ki nom",
            "third":"Bisin ena enn bon nom ek enn bon type data",
            "fourth":"Ena impe styl kav servi: camelCaseNaming, snake_case_naming ek PascalCaseNaming",
            "fifth":"Viariab ena differen type pou kone ki li kav garde couma Integer, Float,String ek Boolean",
            "sixth":"Ene foi defini to kav servi li partou"
          },
          "challenge":{
            "title":"Indentifie variab correct la",
            "sucess":"Correct :D",
            "failure":"Refer :)"
          }
        }
      },
      "loop-level":{
        "title":"Loops",
        "next-button":"next",
        "pixel-puff-dialogues":{
          "introduction":{
            "first":"Imagine you have a magical spell book that lets you repeat any action as many times as you want with just one command. ",
            "second":"If you want to cast a spell to create 10 cookies, instead of saying \"Create one cookie\" ten times, you can use your magical spell to do it all at once!"
          },
          "definitions":{
            "first":"In programming this spell is called a loop and helps us to do things repeatedly",
            "second":"There are two kinds of loop,a for loop and a while loop",
            "third":"For Loops are when we know in advance how many times we need something",
            "fourth":"While Loops are for when we want to repeat an action until something happens"
          },
          "explanations":{
            "first":"Let's start with for loops. Imagine you have a list of spells and you want to practice each spell once. A for loop can help you go through the list and practice each one.",
            "second":"Next, let's look at while loops. Suppose you have a spell that lasts until your energy runs out. You can use a while loop to keep casting the spell as long as you have energy"
          },
          "challenge":{
            "title":"select the correct loop that should be used to add 10 stones to the basket",
            "sucess":"Correct :D",
            "failure":"Try again, you can do it"
          }
        }
      },
  
  
  
      "array-level":{
        "title":"Arrays",
        "next-button":"next",
        "pixel-puff-dialogues":{
          "introduction":{
            "first":"Imagine you have a big box that can hold lots of your favorite toys. Instead of having your toys scattered all over the place, you can keep them organized in this box.",
            "second":"Now, let us say you want to find your favorite toy car quickly. If all your toys are in the box in a neat order, it is easy to find what you are looking for."
          },
          "definitions":{
            "first":"This box is like an \"array\" in programming.",
            "second":"An array is a data structure that can store multiple values in a single variable",
            "third":"It has an index, that is the key, starting from 0 and a value associated with each index",
            "fourth":"Items can be accessed using the index"
          },
          "explanations":{
            "first":"Add: When you get a new toy, you just put it in the next available spot in your toy box. In an array, you can add new items to the end of the list.",
            "second":"Remove: If you don't want a toy anymore, you take it out of your toy box and give it to a friend. In an array, you can remove items when you do not need them.",
            "third":"Count: You might want to count your toys or look at them all to decide which one to play with. In an array, you can check how many items you have and look at all of them."
          },
          "challenge":{
            "title":"Match the terms to the correct code",
            "sucess":"Correct :D",
            "failure":"Try again, you can do it"
          }
  
        }
     },
  
     "tree-level":{
      "title":"Trees",
      "next-button":"next",
      "pixel-puff-dialogues":{
        "introduction":{
          "first":"Imagine a tree in your backyard. It has a big, strong trunk and lots of branches, and each branch might have more branches, leaves, and maybe even some fruits",
          "second":"This is what a tree data structure looks like in the world of computers!"
        },
        "definitions":{
          "first":"Root: The root is like the trunk of the tree. It's the starting point and holds the most important information.",
          "second":"Nodes: Each point on the tree where the branches split or end is called a node. Nodes hold pieces of information.",
          "third":"Branches (Edges): These are the lines that connect the nodes, just like branches connect the trunk to the leaves.",
          "fourth":"Leaves: These are the nodes at the very end of the branches. They don't have any more branches coming out of them.",
          "fifth":"Parent and Child: If one node is connected directly to another below it, the upper node is the parent, and the lower node is the child."
        },
        "explanations":{
          "first":"Adding Information: Just like you can add more branches to a tree, you can add more information to a tree data structure.",
          "second":"New nodes can grow from existing nodes, like new branches growing from the trunk or other branches.",
          "third":"Finding Information: If you want to find something in the tree, you start at the root and follow the branches until you reach the right node",
          "fourth":"Organizing Information: Trees help organize information in a way that makes it easy to see relationships and hierarchies.",
          "fifth":"Below is an example of a tree for Subjects at school"
        },
        "challenge":{
          "title":"Select the root and a leaf node in the image below",
          "sucess":"Correct :D",
          "failure":"Try again, you can do it"
        }
  
      }
    },
  
  
    "queue-level":{
      "title":"Queues",
      "next-button":"next",
      "pixel-puff-dialogues":{
        "introduction":{
          "first":"Imagine you're waiting in line for your turn to ride the roller coaster at an amusement park. ",
          "second":"There's a line of excited kids, and each one waits patiently for their turn to hop on the coaster",
          "third":"This waiting line is just like a queue in the world of computers!"
        },
        "definitions":{
          "first":"Queue Definitions",
          "second":"Front: The beginning of the line, where the first item is waiting.",
          "third":"Rear (or Back): The end of the line, where new items are added.",
          "fourth":"Enqueue: Adding an item to the rear of the queue.",
          "fifth":"Dequeue: Removing an item from the front of the queue."
        },
        "explanations":{
          "first":"Joining the Queue: When you arrive at the ice cream truck, you join the end of the line. This is like adding an item to the rear of the queue.",
          "second":"Getting Served: When it's your turn at the ice cream truck, you go to the front of the line and get your ice cream. This is like removing an item from the front of the queue.",
          "third":"Order Matters: In a queue, the order you join is the order you get served. It's fair because everyone waits their turn."
  
        },
        "challenge":{
          "title":"Sam needs to wait for his turn to get ice cream, click on the people that needs to be served first in the correct order.",
          "sucess":"Correct :D",
          "failure":"Try again, you can do it"
        }
  
      }
    },
  
    "stack-level":{
      "title":"Stack",
      "next-button":"next",
      "pixel-puff-dialogues":{
        "introduction":{
          "first":"Imagine you're playing with a stack of colorful blocks. You start with one block and keep adding more on top, creating a tall tower. ",
          "second":"When you want to take a block away, you always take the top one first. This stack of blocks is just like a stack in the world of computers!"
        },
        "definitions":{
          "first":"A stack is a way to organize things where you can only add or remove items from the top. ",
          "second":"Top: The end of the stack where items are added or removed.",
          "third":"Push: Adding an item to the top of the stack.",
          "fourth":"Pop: Removing an item from the top of the stack."
        },
        "explanations":{
          "first":"Adding Items (Push): When you add a new block to your stack, you always put it on top of the last block. This keeps your tower growing taller.",
          "second":"Taking Items (Pop): When you want to take away a block, you always take the top one first. This way, you get the last block you added.",
          "third":"Order Matters: In a stack, the order you add and remove items is important. You always work with the most recent item first."
  
        },
        "challenge":{
          "title":"Which of the following structures describe a stack",
          "sucess":"Correct :D",
          "failure":"Try again, you can do it"
        }
  
      }
    },
      "achievements":{
        "constant":"You are a constant learner",
        "variable":"Changes are inevitable",
        "loop":"loop a loop",
        "array":"Array-tastic!",
        "tree":"Tree-mendous! ",
        "queue":"Queue-tiful!",
        "stack":"Stack-tacular!"
  
      }
    
  }