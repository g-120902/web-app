{
  "header": {
    "title": "This is the title"

    },
    "home": {
      "title": "web learning terminal",
      "welcome": "Welcome",
      "play": "play",
      "login": "log in",
      "play-guest": "play as guest",
      "not-connected": "You are not connected, do you want to",
      "signup": "create an account ?"
    },
    "login": {
      "password": "Password",
      "email": "Email",
      "signin": "Sign In",
      "signup": "Create an account",
      "incorrect-credentials": "Wrong email or password"
    },
    "side-bar": {
      "home": "home",
      "profile": "profile",
      "login": "log in",
      "logout": "log out",
      "achievements": "achievements",
      "language": "language"
    },
    "constant-level": {
      "title":"Constants",
      "next-button":"next",
      "pixel-puff-dialogues":{
        "introduction":"Our world is an ever changing one, but everything needs a balance. Some properties cannot be changed like gravity",
        "definitions":{
          "first":"In the programming world, a constant is a value that, once defined, cannot be altered by the program during its execution.",
          "second":"Constants are useful for values that need to be consistent and unchanging, ensuring reliability and predictability in the code"
        },
        "characteristics":{
          "first":"Once a constant is assigned a value, it cannot be modified."
        },
        "examples":{
          "first":"Here is how we define a constant",
          "second":"It should have a name and a value assigned to it",
          "third":"Oh no what is happening!",
          "fourth":"Here, let us make the gravity constant, it can't be changed"

        },
        "challenge":{
          "first":"Now try to create a constant using the items below",
          "sucess":"Good Job",
          "failure":"Try again"
        }
      }
    },
    "variable-level":{
      "title":"Variables",
      "next-button":"next",
      "pixel-puff-dialogues":{
        
        "introduction":"Think of a variable as a special box with a label on it. You can put different things inside this box, and whenever you need to use what's inside, you just look at the label.",
        "definitions":{
          "first":"Variables are similar to constants as they also require a name and a value. However, unlike constants, their values can be changed"
        },
        "explanations":{
          "first":"Naming: As we said the box needs to be labeled for proper identification.",
          "second":"We cannot simply name them how we want.",
          "third":"It should have a proper name and a data type.",
          "fourth":"There are also styles that can be used to name the variable: camelCaseNaming, snake_case_naming and PascalCaseNaming",
          "fifth":"There are also styles that can be used: camelCaseNaming, snake_case_naming and PascalCaseNaming",
          "sixth":"Variables have data types that determine what kind of data they can store such as Integer, Float,String and Boolean",
          "seventh":"Once a variable is defined, it can be used throughout your code"
        },
        "challenge":{
          "title":"Identify the correct variables",
          "sucess":"Correct :D",
          "failure":"Try again, you can do it"
        }
      }
    },
    "loop-level":{
      "title":"Loops",
      "next-button":"next",
      "pixel-puff-dialogues":{
        "introduction":{
          "first":"Imagine you have a magical spell book that lets you repeat any action as many times as you want with just one command. ",
          "second":"If you want to cast a spell to create 10 cookies, instead of saying \"Create one cookie\" ten times, you can use your magical spell to do it all at once!"
        },
        "definitions":{
          "first":"In programming this spell is called a loop and helps us to do things repeatedly",
          "second":"There are two kinds of loop,a for loop and a while loop",
          "third":"For Loops are when we know in advance how many times we need something",
          "fourth":"While Loops are for when we want to repeat an action until something happens"
        },
        "explanations":{
          "first":"Let's start with for loops. Imagine you have a list of spells and you want to practice each spell once. A for loop can help you go through the list and practice each one.",
          "second":"Next, let's look at while loops. Suppose you have a spell that lasts until your energy runs out. You can use a while loop to keep casting the spell as long as you have energy"
        },
        "challenge":{
          "title":"select the correct loop that should be used to add 10 stones to the basket",
          "sucess":"Correct :D",
          "failure":"Try again, you can do it"
        }
      }

    },
    "achievements":{

      "constant-achievement":"You are a constant learner",
      "variable-achievement":"Changes are inevitable",
      "loop-achievement":"",
      "array-achievement":"",
      "tree-achievement":"",
      "queue-achievement":"",
      "stack-achievement":""


    }
}